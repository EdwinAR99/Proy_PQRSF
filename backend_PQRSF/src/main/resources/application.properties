#Por donde se escuchara el servidor
server.port=8080
#*****************CONNECT DB********************
# ===============================
# = DATA SOURCE
# ===============================
#Driver/Libreria  para comunicarse con mysql
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# Set here configurations for the database connection
# Connection url for the database "netgloo_blog"
#Url donde esta la base de datos y en nombre
spring.datasource.url = jdbc:mysql://localhost:3306/pqrsf_db
# Username and secret
#Credenciales de acceso
spring.datasource.username = root
spring.datasource.password = 
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).
# Show or not log for each sql query
#Muestra las sentencias sql en la consola
spring.jpa.show-sql = true
# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
#spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.ddl-auto = update
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
